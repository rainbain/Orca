#pragma once

#include "Instruction.h"

const uint16_t PositionTransformMicrocodeA[] = {
	// Vec3 Multiply By 3x4 Matrix
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 0
	INSTRUCTION(PTA_VECTOR(1), PTB_MATRIX(1, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 1
	INSTRUCTION(PTA_ACCUMULATOR(1), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 2
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(2, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 3
	INSTRUCTION(PTA_ACCUMULATOR(1), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 4
	INSTRUCTION(PTA_ACCUMULATOR(0), PTB_MATRIX(3, 0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 5
	PT_OPERATION(OP_READY),                                                                        // 6
	
	// Perspective
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 7
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(1, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 8
	INSTRUCTION(PTA_ACCUMULATOR(1), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 9
	PT_OPERATION(OP_READY),                                                                        // 10
	
	// Orthographic
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 0), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 11
	INSTRUCTION(PTA_ACCUMULATOR(0), PTB_MATRIX(1, 0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 12
	PT_OPERATION(OP_READY)                                                                         // 13
};

const uint16_t PositionTransformMicrocodeB[] = {
	// Vec3 Multiply By 3x4 Matrix
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 0
	INSTRUCTION(PTA_VECTOR(1), PTB_MATRIX(1, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 1
	INSTRUCTION(PTA_ACCUMULATOR(5), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 2
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(2, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 3
	INSTRUCTION(PTA_ACCUMULATOR(5), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 4
	INSTRUCTION(PTA_ACCUMULATOR(4), PTB_MATRIX(3, 1), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 5
	PT_OPERATION(OP_READY),                                                                        // 6
	
	// Perspective
	INSTRUCTION(PTA_VECTOR(1), PTB_MATRIX(0, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 7
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(1, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 8
	INSTRUCTION(PTA_ACCUMULATOR(5), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 9
	PT_OPERATION(OP_READY),                                                                        // 10
	
	// Orthographic
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 1), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 11
	INSTRUCTION(PTA_ACCUMULATOR(4), PTB_MATRIX(1, 1), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 12
	PT_OPERATION(OP_READY)                                                                         // 13
};

const uint16_t PositionTransformMicrocodeC[] = {
	// Vec3 Multiply By 3x4 Matrix
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 2), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 0
	INSTRUCTION(PTA_VECTOR(1), PTB_MATRIX(1, 2), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 1
	INSTRUCTION(PTA_ACCUMULATOR(9), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 2
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(2, 2), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(1)),       // 3
	INSTRUCTION(PTA_ACCUMULATOR(9), PTB_ACCUMULATOR(0), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)), // 4
	INSTRUCTION(PTA_ACCUMULATOR(8), PTB_MATRIX(3, 2), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 5
	PT_OPERATION(OP_READY),                                                                        // 6
	
	// Perspective
	INSTRUCTION(PTA_VECTOR(2), PTB_MATRIX(0, 2), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 7
	INSTRUCTION(PTA_ACCUMULATOR(8), PTB_MATRIX(1, 2), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 8
	PT_OPERATION(OP_READY),                                                                        // 9
	PT_OPERATION(OP_READY),                                                                        // 10
	
	// Orthographic
	INSTRUCTION(PTA_VECTOR(0), PTB_MATRIX(0, 2), PT_OPERATION(OP_MULT), PTU_ACCUMULATOR(0)),       // 11
	INSTRUCTION(PTA_ACCUMULATOR(8), PTB_MATRIX(1, 2), PT_OPERATION(OP_ADD), PTU_ACCUMULATOR(0)),   // 12
	PT_OPERATION(OP_READY)                                                                         // 13

};